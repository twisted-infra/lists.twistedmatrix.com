#!/bin/bash

# This script should be runnable in any environment where the 'docker' command
# line will tell an engine to do things.

set -e;

docker build -t base -f base.Dockerfile .;
docker build -t build -f build.Dockerfile .;

mkdir -p build/wheelhouse;

CACHING_ARGS="$(
    if [ -n "${PIP_INDEX_URL}" ]; then
        echo "-e=PIP_TRUSTED_HOST=10.200.10.1 -e=PIP_INDEX_URL=$(echo $PIP_INDEX_URL | sed s/127.0.0.1/10.200.10.1/g)"; # as per 'docker for mac' networking guide alias
    fi;
)";

echo "$argz";

tar cjf - -X .dockerignore . | \
    docker run --rm -i $CACHING_ARGS build | \
    (cd build/wheelhouse; tar xjf -);

docker build -t lists.twistedmatrix.com .;

function dvc.volname () {
    # Allow for setting VOLUME_PREFIX so that we can map host paths if we want,
    # for development.
    local VOLUME_NAME="$1"; shift;
    echo -n "${VOLUME_PREFIX:+${VOLUME_PREFIX}/}${VOLUME_NAME}.volume";
}

function dvc.new () {
    local VOLUME_NAME="$1"; shift;
    docker create --name "${VOLUME_NAME}.dvc" \
           --volume "$(dvc.volname ${VOLUME_NAME}):/data" hello-world;
    docker run --rm -it --volumes-from="${VOLUME_NAME}.dvc" ubuntu bash -c \
           "chown ${TWISTED_USER_ID} /data";
    return "$?";
}


if dvc.new lists.tls; then
    docker run --rm -it --user "${TWISTED_USER_ID}" \
           --volumes-from "lists.tls.dvc" ubuntu bash -c \
           "if [ ! -e /data/${TLS_HOSTNAME}.pem ]; then touch /data/${TLS_HOSTNAME}.pem; fi"
fi;

dvc.new lists.database || true;
dvc.new lists.messages || true;

# Create data volume containers if they don't already exist.
docker rm -f lists.container || true;
docker run -e MAILGUN_API_KEY -e NO_RENEW --detach --user="${TWISTED_USER_ID}" \
       --name lists.container --restart=always \
       -v "$(dvc.volname lists.tls):/certificates" \
       -v "$(dvc.volname lists.database):/database" \
       -v "$(dvc.volname lists.messages):/legacy-mailman-archive" \
       -p 443:8443 lists.twistedmatrix.com;
